
CalibrateADC.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000148  00800100  000007c0  00000854  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000007c0  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000002  00800248  00800248  0000099c  2**0
                  ALLOC
  3 .comment      00000011  00000000  00000000  0000099c  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 000000a0  00000000  00000000  000009b0  2**3
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000003b6  00000000  00000000  00000a50  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000064  00000000  00000000  00000e06  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000001e3  00000000  00000000  00000e6a  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d4 e0       	ldi	r29, 0x04	; 4
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	12 e0       	ldi	r17, 0x02	; 2
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	e0 ec       	ldi	r30, 0xC0	; 192
  7c:	f7 e0       	ldi	r31, 0x07	; 7
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	a8 34       	cpi	r26, 0x48	; 72
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	22 e0       	ldi	r18, 0x02	; 2
  8c:	a8 e4       	ldi	r26, 0x48	; 72
  8e:	b2 e0       	ldi	r27, 0x02	; 2
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	aa 34       	cpi	r26, 0x4A	; 74
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 1d 02 	call	0x43a	; 0x43a <main>
  9e:	0c 94 de 03 	jmp	0x7bc	; 0x7bc <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <initUSART>:
  a6:	10 92 c5 00 	sts	0x00C5, r1
  aa:	8c e0       	ldi	r24, 0x0C	; 12
  ac:	80 93 c4 00 	sts	0x00C4, r24
  b0:	e0 ec       	ldi	r30, 0xC0	; 192
  b2:	f0 e0       	ldi	r31, 0x00	; 0
  b4:	80 81       	ld	r24, Z
  b6:	82 60       	ori	r24, 0x02	; 2
  b8:	80 83       	st	Z, r24
  ba:	88 e1       	ldi	r24, 0x18	; 24
  bc:	80 93 c1 00 	sts	0x00C1, r24
  c0:	86 e0       	ldi	r24, 0x06	; 6
  c2:	80 93 c2 00 	sts	0x00C2, r24
  c6:	08 95       	ret

000000c8 <transmitByte>:
  c8:	90 91 c0 00 	lds	r25, 0x00C0
  cc:	95 ff       	sbrs	r25, 5
  ce:	fc cf       	rjmp	.-8      	; 0xc8 <transmitByte>
  d0:	80 93 c6 00 	sts	0x00C6, r24
  d4:	08 95       	ret

000000d6 <receiveByte>:
  d6:	80 91 c0 00 	lds	r24, 0x00C0
  da:	87 ff       	sbrs	r24, 7
  dc:	fc cf       	rjmp	.-8      	; 0xd6 <receiveByte>
  de:	80 91 c6 00 	lds	r24, 0x00C6
  e2:	08 95       	ret

000000e4 <getByte>:
  e4:	80 91 c0 00 	lds	r24, 0x00C0
  e8:	87 ff       	sbrs	r24, 7
  ea:	03 c0       	rjmp	.+6      	; 0xf2 <getByte+0xe>
  ec:	80 91 c6 00 	lds	r24, 0x00C6
  f0:	08 95       	ret
  f2:	80 e0       	ldi	r24, 0x00	; 0
  f4:	08 95       	ret

000000f6 <printString>:
  f6:	1f 93       	push	r17
  f8:	cf 93       	push	r28
  fa:	df 93       	push	r29
  fc:	ec 01       	movw	r28, r24
  fe:	10 e0       	ldi	r17, 0x00	; 0
 100:	fe 01       	movw	r30, r28
 102:	e1 0f       	add	r30, r17
 104:	f1 1d       	adc	r31, r1
 106:	80 81       	ld	r24, Z
 108:	88 23       	and	r24, r24
 10a:	21 f0       	breq	.+8      	; 0x114 <printString+0x1e>
 10c:	0e 94 64 00 	call	0xc8	; 0xc8 <transmitByte>
 110:	1f 5f       	subi	r17, 0xFF	; 255
 112:	f6 cf       	rjmp	.-20     	; 0x100 <printString+0xa>
 114:	df 91       	pop	r29
 116:	cf 91       	pop	r28
 118:	1f 91       	pop	r17
 11a:	08 95       	ret

0000011c <readString>:
 11c:	cf 92       	push	r12
 11e:	df 92       	push	r13
 120:	ef 92       	push	r14
 122:	ff 92       	push	r15
 124:	0f 93       	push	r16
 126:	1f 93       	push	r17
 128:	cf 93       	push	r28
 12a:	df 93       	push	r29
 12c:	7c 01       	movw	r14, r24
 12e:	d1 2c       	mov	r13, r1
 130:	06 2f       	mov	r16, r22
 132:	10 e0       	ldi	r17, 0x00	; 0
 134:	01 50       	subi	r16, 0x01	; 1
 136:	11 09       	sbc	r17, r1
 138:	cd 2d       	mov	r28, r13
 13a:	d0 e0       	ldi	r29, 0x00	; 0
 13c:	c0 17       	cp	r28, r16
 13e:	d1 07       	cpc	r29, r17
 140:	44 f4       	brge	.+16     	; 0x152 <readString+0x36>
 142:	0e 94 6b 00 	call	0xd6	; 0xd6 <receiveByte>
 146:	c8 2e       	mov	r12, r24
 148:	0e 94 64 00 	call	0xc8	; 0xc8 <transmitByte>
 14c:	8d e0       	ldi	r24, 0x0D	; 13
 14e:	c8 12       	cpse	r12, r24
 150:	0c c0       	rjmp	.+24     	; 0x16a <readString+0x4e>
 152:	ce 0d       	add	r28, r14
 154:	df 1d       	adc	r29, r15
 156:	18 82       	st	Y, r1
 158:	df 91       	pop	r29
 15a:	cf 91       	pop	r28
 15c:	1f 91       	pop	r17
 15e:	0f 91       	pop	r16
 160:	ff 90       	pop	r15
 162:	ef 90       	pop	r14
 164:	df 90       	pop	r13
 166:	cf 90       	pop	r12
 168:	08 95       	ret
 16a:	ce 0d       	add	r28, r14
 16c:	df 1d       	adc	r29, r15
 16e:	c8 82       	st	Y, r12
 170:	d3 94       	inc	r13
 172:	e2 cf       	rjmp	.-60     	; 0x138 <readString+0x1c>

00000174 <printByte>:
 174:	cf 93       	push	r28
 176:	c8 2f       	mov	r28, r24
 178:	64 e6       	ldi	r22, 0x64	; 100
 17a:	0e 94 be 03 	call	0x77c	; 0x77c <__udivmodqi4>
 17e:	80 5d       	subi	r24, 0xD0	; 208
 180:	0e 94 64 00 	call	0xc8	; 0xc8 <transmitByte>
 184:	2a e0       	ldi	r18, 0x0A	; 10
 186:	8c 2f       	mov	r24, r28
 188:	62 2f       	mov	r22, r18
 18a:	0e 94 be 03 	call	0x77c	; 0x77c <__udivmodqi4>
 18e:	c9 2f       	mov	r28, r25
 190:	0e 94 be 03 	call	0x77c	; 0x77c <__udivmodqi4>
 194:	80 e3       	ldi	r24, 0x30	; 48
 196:	89 0f       	add	r24, r25
 198:	0e 94 64 00 	call	0xc8	; 0xc8 <transmitByte>
 19c:	80 e3       	ldi	r24, 0x30	; 48
 19e:	8c 0f       	add	r24, r28
 1a0:	cf 91       	pop	r28
 1a2:	0c 94 64 00 	jmp	0xc8	; 0xc8 <transmitByte>

000001a6 <printWord>:
 1a6:	0f 93       	push	r16
 1a8:	1f 93       	push	r17
 1aa:	cf 93       	push	r28
 1ac:	df 93       	push	r29
 1ae:	ec 01       	movw	r28, r24
 1b0:	60 e1       	ldi	r22, 0x10	; 16
 1b2:	77 e2       	ldi	r23, 0x27	; 39
 1b4:	0e 94 ca 03 	call	0x794	; 0x794 <__udivmodhi4>
 1b8:	80 e3       	ldi	r24, 0x30	; 48
 1ba:	86 0f       	add	r24, r22
 1bc:	0e 94 64 00 	call	0xc8	; 0xc8 <transmitByte>
 1c0:	ce 01       	movw	r24, r28
 1c2:	68 ee       	ldi	r22, 0xE8	; 232
 1c4:	73 e0       	ldi	r23, 0x03	; 3
 1c6:	0e 94 ca 03 	call	0x794	; 0x794 <__udivmodhi4>
 1ca:	cb 01       	movw	r24, r22
 1cc:	0a e0       	ldi	r16, 0x0A	; 10
 1ce:	10 e0       	ldi	r17, 0x00	; 0
 1d0:	b8 01       	movw	r22, r16
 1d2:	0e 94 ca 03 	call	0x794	; 0x794 <__udivmodhi4>
 1d6:	80 5d       	subi	r24, 0xD0	; 208
 1d8:	0e 94 64 00 	call	0xc8	; 0xc8 <transmitByte>
 1dc:	ce 01       	movw	r24, r28
 1de:	64 e6       	ldi	r22, 0x64	; 100
 1e0:	70 e0       	ldi	r23, 0x00	; 0
 1e2:	0e 94 ca 03 	call	0x794	; 0x794 <__udivmodhi4>
 1e6:	cb 01       	movw	r24, r22
 1e8:	b8 01       	movw	r22, r16
 1ea:	0e 94 ca 03 	call	0x794	; 0x794 <__udivmodhi4>
 1ee:	80 5d       	subi	r24, 0xD0	; 208
 1f0:	0e 94 64 00 	call	0xc8	; 0xc8 <transmitByte>
 1f4:	ce 01       	movw	r24, r28
 1f6:	b8 01       	movw	r22, r16
 1f8:	0e 94 ca 03 	call	0x794	; 0x794 <__udivmodhi4>
 1fc:	c8 2f       	mov	r28, r24
 1fe:	cb 01       	movw	r24, r22
 200:	b8 01       	movw	r22, r16
 202:	0e 94 ca 03 	call	0x794	; 0x794 <__udivmodhi4>
 206:	80 5d       	subi	r24, 0xD0	; 208
 208:	0e 94 64 00 	call	0xc8	; 0xc8 <transmitByte>
 20c:	80 e3       	ldi	r24, 0x30	; 48
 20e:	8c 0f       	add	r24, r28
 210:	df 91       	pop	r29
 212:	cf 91       	pop	r28
 214:	1f 91       	pop	r17
 216:	0f 91       	pop	r16
 218:	0c 94 64 00 	jmp	0xc8	; 0xc8 <transmitByte>

0000021c <printBinaryByte>:
 21c:	1f 93       	push	r17
 21e:	cf 93       	push	r28
 220:	df 93       	push	r29
 222:	1f 92       	push	r1
 224:	cd b7       	in	r28, 0x3d	; 61
 226:	de b7       	in	r29, 0x3e	; 62
 228:	89 83       	std	Y+1, r24	; 0x01
 22a:	17 e0       	ldi	r17, 0x07	; 7
 22c:	89 81       	ldd	r24, Y+1	; 0x01
 22e:	90 e0       	ldi	r25, 0x00	; 0
 230:	01 2e       	mov	r0, r17
 232:	02 c0       	rjmp	.+4      	; 0x238 <printBinaryByte+0x1c>
 234:	95 95       	asr	r25
 236:	87 95       	ror	r24
 238:	0a 94       	dec	r0
 23a:	e2 f7       	brpl	.-8      	; 0x234 <printBinaryByte+0x18>
 23c:	80 ff       	sbrs	r24, 0
 23e:	02 c0       	rjmp	.+4      	; 0x244 <printBinaryByte+0x28>
 240:	81 e3       	ldi	r24, 0x31	; 49
 242:	01 c0       	rjmp	.+2      	; 0x246 <printBinaryByte+0x2a>
 244:	80 e3       	ldi	r24, 0x30	; 48
 246:	0e 94 64 00 	call	0xc8	; 0xc8 <transmitByte>
 24a:	11 50       	subi	r17, 0x01	; 1
 24c:	78 f7       	brcc	.-34     	; 0x22c <printBinaryByte+0x10>
 24e:	0f 90       	pop	r0
 250:	df 91       	pop	r29
 252:	cf 91       	pop	r28
 254:	1f 91       	pop	r17
 256:	08 95       	ret

00000258 <nibbleToHexCharacter>:
 258:	8a 30       	cpi	r24, 0x0A	; 10
 25a:	10 f4       	brcc	.+4      	; 0x260 <nibbleToHexCharacter+0x8>
 25c:	80 5d       	subi	r24, 0xD0	; 208
 25e:	08 95       	ret
 260:	89 5c       	subi	r24, 0xC9	; 201
 262:	08 95       	ret

00000264 <printHexByte>:
 264:	cf 93       	push	r28
 266:	c8 2f       	mov	r28, r24
 268:	82 95       	swap	r24
 26a:	8f 70       	andi	r24, 0x0F	; 15
 26c:	0e 94 2c 01 	call	0x258	; 0x258 <nibbleToHexCharacter>
 270:	0e 94 64 00 	call	0xc8	; 0xc8 <transmitByte>
 274:	8c 2f       	mov	r24, r28
 276:	8f 70       	andi	r24, 0x0F	; 15
 278:	0e 94 2c 01 	call	0x258	; 0x258 <nibbleToHexCharacter>
 27c:	cf 91       	pop	r28
 27e:	0c 94 64 00 	jmp	0xc8	; 0xc8 <transmitByte>

00000282 <printHexWord>:
 282:	cf 93       	push	r28
 284:	c8 2f       	mov	r28, r24
 286:	89 2f       	mov	r24, r25
 288:	0e 94 32 01 	call	0x264	; 0x264 <printHexByte>
 28c:	8c 2f       	mov	r24, r28
 28e:	cf 91       	pop	r28
 290:	0c 94 32 01 	jmp	0x264	; 0x264 <printHexByte>

00000294 <getNumber>:
 294:	0f 93       	push	r16
 296:	1f 93       	push	r17
 298:	cf 93       	push	r28
 29a:	df 93       	push	r29
 29c:	d0 e3       	ldi	r29, 0x30	; 48
 29e:	c0 e3       	ldi	r28, 0x30	; 48
 2a0:	00 e3       	ldi	r16, 0x30	; 48
 2a2:	0e 94 6b 00 	call	0xd6	; 0xd6 <receiveByte>
 2a6:	18 2f       	mov	r17, r24
 2a8:	0e 94 64 00 	call	0xc8	; 0xc8 <transmitByte>
 2ac:	1d 30       	cpi	r17, 0x0D	; 13
 2ae:	21 f0       	breq	.+8      	; 0x2b8 <getNumber+0x24>
 2b0:	0c 2f       	mov	r16, r28
 2b2:	cd 2f       	mov	r28, r29
 2b4:	d1 2f       	mov	r29, r17
 2b6:	f5 cf       	rjmp	.-22     	; 0x2a2 <getNumber+0xe>
 2b8:	d0 53       	subi	r29, 0x30	; 48
 2ba:	00 53       	subi	r16, 0x30	; 48
 2bc:	84 e6       	ldi	r24, 0x64	; 100
 2be:	08 9f       	mul	r16, r24
 2c0:	d0 0d       	add	r29, r0
 2c2:	11 24       	eor	r1, r1
 2c4:	9c 2f       	mov	r25, r28
 2c6:	99 0f       	add	r25, r25
 2c8:	90 56       	subi	r25, 0x60	; 96
 2ca:	89 2f       	mov	r24, r25
 2cc:	88 0f       	add	r24, r24
 2ce:	88 0f       	add	r24, r24
 2d0:	89 0f       	add	r24, r25
 2d2:	8d 0f       	add	r24, r29
 2d4:	df 91       	pop	r29
 2d6:	cf 91       	pop	r28
 2d8:	1f 91       	pop	r17
 2da:	0f 91       	pop	r16
 2dc:	08 95       	ret

000002de <calibrateADC0>:
 2de:	cf 92       	push	r12
 2e0:	df 92       	push	r13
 2e2:	ef 92       	push	r14
 2e4:	ff 92       	push	r15
 2e6:	0f 93       	push	r16
 2e8:	1f 93       	push	r17
 2ea:	cf 93       	push	r28
 2ec:	df 93       	push	r29
 2ee:	6c 01       	movw	r12, r24
 2f0:	7b 01       	movw	r14, r22
 2f2:	80 e0       	ldi	r24, 0x00	; 0
 2f4:	91 e0       	ldi	r25, 0x01	; 1
 2f6:	0e 94 7b 00 	call	0xf6	; 0xf6 <printString>
 2fa:	57 9a       	sbi	0x0a, 7	; 10
 2fc:	5f 98       	cbi	0x0b, 7	; 11
 2fe:	00 c0       	rjmp	.+0      	; 0x300 <calibrateADC0+0x22>
 300:	00 c0       	rjmp	.+0      	; 0x302 <calibrateADC0+0x24>
 302:	00 00       	nop
 304:	5f 9a       	sbi	0x0b, 7	; 11
 306:	88 e0       	ldi	r24, 0x08	; 8
 308:	8a 95       	dec	r24
 30a:	f1 f7       	brne	.-4      	; 0x308 <calibrateADC0+0x2a>
 30c:	00 00       	nop
 30e:	0e 94 6b 00 	call	0xd6	; 0xd6 <receiveByte>
 312:	8d 30       	cpi	r24, 0x0D	; 13
 314:	e1 f7       	brne	.-8      	; 0x30e <calibrateADC0+0x30>
 316:	80 91 7a 00 	lds	r24, 0x007A
 31a:	80 64       	ori	r24, 0x40	; 64
 31c:	80 93 7a 00 	sts	0x007A, r24
 320:	80 91 7a 00 	lds	r24, 0x007A
 324:	86 fd       	sbrc	r24, 6
 326:	fc cf       	rjmp	.-8      	; 0x320 <calibrateADC0+0x42>
 328:	c0 91 78 00 	lds	r28, 0x0078
 32c:	d0 91 79 00 	lds	r29, 0x0079
 330:	85 e3       	ldi	r24, 0x35	; 53
 332:	91 e0       	ldi	r25, 0x01	; 1
 334:	0e 94 7b 00 	call	0xf6	; 0xf6 <printString>
 338:	ce 01       	movw	r24, r28
 33a:	0e 94 d3 00 	call	0x1a6	; 0x1a6 <printWord>
 33e:	87 e4       	ldi	r24, 0x47	; 71
 340:	91 e0       	ldi	r25, 0x01	; 1
 342:	0e 94 7b 00 	call	0xf6	; 0xf6 <printString>
 346:	57 9a       	sbi	0x0a, 7	; 10
 348:	5f 98       	cbi	0x0b, 7	; 11
 34a:	00 c0       	rjmp	.+0      	; 0x34c <calibrateADC0+0x6e>
 34c:	00 c0       	rjmp	.+0      	; 0x34e <calibrateADC0+0x70>
 34e:	00 00       	nop
 350:	5f 9a       	sbi	0x0b, 7	; 11
 352:	e8 e0       	ldi	r30, 0x08	; 8
 354:	ea 95       	dec	r30
 356:	f1 f7       	brne	.-4      	; 0x354 <calibrateADC0+0x76>
 358:	00 00       	nop
 35a:	0e 94 6b 00 	call	0xd6	; 0xd6 <receiveByte>
 35e:	8d 30       	cpi	r24, 0x0D	; 13
 360:	e1 f7       	brne	.-8      	; 0x35a <calibrateADC0+0x7c>
 362:	80 91 7a 00 	lds	r24, 0x007A
 366:	80 64       	ori	r24, 0x40	; 64
 368:	80 93 7a 00 	sts	0x007A, r24
 36c:	80 91 7a 00 	lds	r24, 0x007A
 370:	86 fd       	sbrc	r24, 6
 372:	fc cf       	rjmp	.-8      	; 0x36c <calibrateADC0+0x8e>
 374:	00 91 78 00 	lds	r16, 0x0078
 378:	10 91 79 00 	lds	r17, 0x0079
 37c:	85 e3       	ldi	r24, 0x35	; 53
 37e:	91 e0       	ldi	r25, 0x01	; 1
 380:	0e 94 7b 00 	call	0xf6	; 0xf6 <printString>
 384:	c8 01       	movw	r24, r16
 386:	0e 94 d3 00 	call	0x1a6	; 0x1a6 <printWord>
 38a:	0c 17       	cp	r16, r28
 38c:	1d 07       	cpc	r17, r29
 38e:	50 f4       	brcc	.+20     	; 0x3a4 <calibrateADC0+0xc6>
 390:	8d e7       	ldi	r24, 0x7D	; 125
 392:	91 e0       	ldi	r25, 0x01	; 1
 394:	0e 94 7b 00 	call	0xf6	; 0xf6 <printString>
 398:	80 91 78 00 	lds	r24, 0x0078
 39c:	90 91 79 00 	lds	r25, 0x0079
 3a0:	8e 01       	movw	r16, r28
 3a2:	ec 01       	movw	r28, r24
 3a4:	f6 01       	movw	r30, r12
 3a6:	d1 83       	std	Z+1, r29	; 0x01
 3a8:	c0 83       	st	Z, r28
 3aa:	f7 01       	movw	r30, r14
 3ac:	11 83       	std	Z+1, r17	; 0x01
 3ae:	00 83       	st	Z, r16
 3b0:	0c 1b       	sub	r16, r28
 3b2:	1d 0b       	sbc	r17, r29
 3b4:	20 e0       	ldi	r18, 0x00	; 0
 3b6:	c8 01       	movw	r24, r16
 3b8:	02 2e       	mov	r0, r18
 3ba:	02 c0       	rjmp	.+4      	; 0x3c0 <calibrateADC0+0xe2>
 3bc:	96 95       	lsr	r25
 3be:	87 95       	ror	r24
 3c0:	0a 94       	dec	r0
 3c2:	e2 f7       	brpl	.-8      	; 0x3bc <calibrateADC0+0xde>
 3c4:	89 2b       	or	r24, r25
 3c6:	11 f0       	breq	.+4      	; 0x3cc <calibrateADC0+0xee>
 3c8:	2f 5f       	subi	r18, 0xFF	; 255
 3ca:	f5 cf       	rjmp	.-22     	; 0x3b6 <calibrateADC0+0xd8>
 3cc:	8a e0       	ldi	r24, 0x0A	; 10
 3ce:	82 1b       	sub	r24, r18
 3d0:	df 91       	pop	r29
 3d2:	cf 91       	pop	r28
 3d4:	1f 91       	pop	r17
 3d6:	0f 91       	pop	r16
 3d8:	ff 90       	pop	r15
 3da:	ef 90       	pop	r14
 3dc:	df 90       	pop	r13
 3de:	cf 90       	pop	r12
 3e0:	08 95       	ret

000003e2 <buttonPressed>:
 3e2:	4e 99       	sbic	0x09, 6	; 9
 3e4:	0d c0       	rjmp	.+26     	; 0x400 <buttonPressed+0x1e>
 3e6:	83 ef       	ldi	r24, 0xF3	; 243
 3e8:	91 e0       	ldi	r25, 0x01	; 1
 3ea:	01 97       	sbiw	r24, 0x01	; 1
 3ec:	f1 f7       	brne	.-4      	; 0x3ea <buttonPressed+0x8>
 3ee:	00 c0       	rjmp	.+0      	; 0x3f0 <buttonPressed+0xe>
 3f0:	00 00       	nop
 3f2:	89 b1       	in	r24, 0x09	; 9
 3f4:	86 fb       	bst	r24, 6
 3f6:	88 27       	eor	r24, r24
 3f8:	80 f9       	bld	r24, 0
 3fa:	91 e0       	ldi	r25, 0x01	; 1
 3fc:	89 27       	eor	r24, r25
 3fe:	01 c0       	rjmp	.+2      	; 0x402 <buttonPressed+0x20>
 400:	80 e0       	ldi	r24, 0x00	; 0
 402:	80 93 49 02 	sts	0x0249, r24
 406:	08 95       	ret

00000408 <newButtonPress>:
 408:	4e 99       	sbic	0x09, 6	; 9
 40a:	0d c0       	rjmp	.+26     	; 0x426 <newButtonPress+0x1e>
 40c:	83 ef       	ldi	r24, 0xF3	; 243
 40e:	91 e0       	ldi	r25, 0x01	; 1
 410:	01 97       	sbiw	r24, 0x01	; 1
 412:	f1 f7       	brne	.-4      	; 0x410 <newButtonPress+0x8>
 414:	00 c0       	rjmp	.+0      	; 0x416 <newButtonPress+0xe>
 416:	00 00       	nop
 418:	89 b1       	in	r24, 0x09	; 9
 41a:	86 fb       	bst	r24, 6
 41c:	88 27       	eor	r24, r24
 41e:	80 f9       	bld	r24, 0
 420:	91 e0       	ldi	r25, 0x01	; 1
 422:	89 27       	eor	r24, r25
 424:	01 c0       	rjmp	.+2      	; 0x428 <newButtonPress+0x20>
 426:	80 e0       	ldi	r24, 0x00	; 0
 428:	90 91 48 02 	lds	r25, 0x0248
 42c:	80 93 48 02 	sts	0x0248, r24
 430:	81 30       	cpi	r24, 0x01	; 1
 432:	09 f4       	brne	.+2      	; 0x436 <newButtonPress+0x2e>
 434:	91 11       	cpse	r25, r1
 436:	80 e0       	ldi	r24, 0x00	; 0
 438:	08 95       	ret

0000043a <main>:
 43a:	cf 93       	push	r28
 43c:	df 93       	push	r29
 43e:	00 d0       	rcall	.+0      	; 0x440 <main+0x6>
 440:	00 d0       	rcall	.+0      	; 0x442 <main+0x8>
 442:	cd b7       	in	r28, 0x3d	; 61
 444:	de b7       	in	r29, 0x3e	; 62
 446:	1c 82       	std	Y+4, r1	; 0x04
 448:	1b 82       	std	Y+3, r1	; 0x03
 44a:	8f ef       	ldi	r24, 0xFF	; 255
 44c:	93 e0       	ldi	r25, 0x03	; 3
 44e:	9a 83       	std	Y+2, r25	; 0x02
 450:	89 83       	std	Y+1, r24	; 0x01
 452:	0e 94 53 00 	call	0xa6	; 0xa6 <initUSART>
 456:	80 91 7c 00 	lds	r24, 0x007C
 45a:	80 64       	ori	r24, 0x40	; 64
 45c:	80 93 7c 00 	sts	0x007C, r24
 460:	80 91 7a 00 	lds	r24, 0x007A
 464:	83 60       	ori	r24, 0x03	; 3
 466:	80 93 7a 00 	sts	0x007A, r24
 46a:	80 91 7a 00 	lds	r24, 0x007A
 46e:	80 68       	ori	r24, 0x80	; 128
 470:	80 93 7a 00 	sts	0x007A, r24
 474:	8f ef       	ldi	r24, 0xFF	; 255
 476:	84 b9       	out	0x04, r24	; 4
 478:	56 98       	cbi	0x0a, 6	; 10
 47a:	5e 9a       	sbi	0x0b, 6	; 11
 47c:	89 ea       	ldi	r24, 0xA9	; 169
 47e:	91 e0       	ldi	r25, 0x01	; 1
 480:	0e 94 7b 00 	call	0xf6	; 0xf6 <printString>
 484:	be 01       	movw	r22, r28
 486:	6f 5f       	subi	r22, 0xFF	; 255
 488:	7f 4f       	sbci	r23, 0xFF	; 255
 48a:	ce 01       	movw	r24, r28
 48c:	03 96       	adiw	r24, 0x03	; 3
 48e:	0e 94 6f 01 	call	0x2de	; 0x2de <calibrateADC0>
 492:	18 2f       	mov	r17, r24
 494:	8a eb       	ldi	r24, 0xBA	; 186
 496:	91 e0       	ldi	r25, 0x01	; 1
 498:	0e 94 7b 00 	call	0xf6	; 0xf6 <printString>
 49c:	8b 81       	ldd	r24, Y+3	; 0x03
 49e:	9c 81       	ldd	r25, Y+4	; 0x04
 4a0:	0e 94 d3 00 	call	0x1a6	; 0x1a6 <printWord>
 4a4:	8f ec       	ldi	r24, 0xCF	; 207
 4a6:	91 e0       	ldi	r25, 0x01	; 1
 4a8:	0e 94 7b 00 	call	0xf6	; 0xf6 <printString>
 4ac:	89 81       	ldd	r24, Y+1	; 0x01
 4ae:	9a 81       	ldd	r25, Y+2	; 0x02
 4b0:	0e 94 d3 00 	call	0x1a6	; 0x1a6 <printWord>
 4b4:	86 ed       	ldi	r24, 0xD6	; 214
 4b6:	91 e0       	ldi	r25, 0x01	; 1
 4b8:	0e 94 7b 00 	call	0xf6	; 0xf6 <printString>
 4bc:	81 2f       	mov	r24, r17
 4be:	0e 94 ba 00 	call	0x174	; 0x174 <printByte>
 4c2:	82 ee       	ldi	r24, 0xE2	; 226
 4c4:	91 e0       	ldi	r25, 0x01	; 1
 4c6:	0e 94 7b 00 	call	0xf6	; 0xf6 <printString>
 4ca:	ee 24       	eor	r14, r14
 4cc:	e3 94       	inc	r14
 4ce:	f1 2c       	mov	r15, r1
 4d0:	57 9a       	sbi	0x0a, 7	; 10
 4d2:	5f 98       	cbi	0x0b, 7	; 11
 4d4:	00 c0       	rjmp	.+0      	; 0x4d6 <main+0x9c>
 4d6:	00 c0       	rjmp	.+0      	; 0x4d8 <main+0x9e>
 4d8:	00 00       	nop
 4da:	5f 9a       	sbi	0x0b, 7	; 11
 4dc:	88 e0       	ldi	r24, 0x08	; 8
 4de:	8a 95       	dec	r24
 4e0:	f1 f7       	brne	.-4      	; 0x4de <main+0xa4>
 4e2:	00 00       	nop
 4e4:	80 91 7a 00 	lds	r24, 0x007A
 4e8:	80 64       	ori	r24, 0x40	; 64
 4ea:	80 93 7a 00 	sts	0x007A, r24
 4ee:	80 91 7a 00 	lds	r24, 0x007A
 4f2:	86 fd       	sbrc	r24, 6
 4f4:	fc cf       	rjmp	.-8      	; 0x4ee <main+0xb4>
 4f6:	00 91 78 00 	lds	r16, 0x0078
 4fa:	10 91 79 00 	lds	r17, 0x0079
 4fe:	c8 01       	movw	r24, r16
 500:	88 0f       	add	r24, r24
 502:	89 2f       	mov	r24, r25
 504:	88 1f       	adc	r24, r24
 506:	99 0b       	sbc	r25, r25
 508:	91 95       	neg	r25
 50a:	d8 2e       	mov	r13, r24
 50c:	c8 01       	movw	r24, r16
 50e:	0e 94 d3 00 	call	0x1a6	; 0x1a6 <printWord>
 512:	85 e4       	ldi	r24, 0x45	; 69
 514:	92 e0       	ldi	r25, 0x02	; 2
 516:	0e 94 7b 00 	call	0xf6	; 0xf6 <printString>
 51a:	87 e0       	ldi	r24, 0x07	; 7
 51c:	0e 94 64 00 	call	0xc8	; 0xc8 <transmitByte>
 520:	88 eb       	ldi	r24, 0xB8	; 184
 522:	91 e0       	ldi	r25, 0x01	; 1
 524:	0e 94 7b 00 	call	0xf6	; 0xf6 <printString>
 528:	c8 01       	movw	r24, r16
 52a:	88 0f       	add	r24, r24
 52c:	99 1f       	adc	r25, r25
 52e:	80 0f       	add	r24, r16
 530:	91 1f       	adc	r25, r17
 532:	20 e0       	ldi	r18, 0x00	; 0
 534:	30 e0       	ldi	r19, 0x00	; 0
 536:	e9 ef       	ldi	r30, 0xF9	; 249
 538:	f0 e0       	ldi	r31, 0x00	; 0
 53a:	31 97       	sbiw	r30, 0x01	; 1
 53c:	f1 f7       	brne	.-4      	; 0x53a <__stack+0x3b>
 53e:	00 c0       	rjmp	.+0      	; 0x540 <__stack+0x41>
 540:	00 00       	nop
 542:	2f 5f       	subi	r18, 0xFF	; 255
 544:	3f 4f       	sbci	r19, 0xFF	; 255
 546:	82 17       	cp	r24, r18
 548:	93 07       	cpc	r25, r19
 54a:	a8 f7       	brcc	.-22     	; 0x536 <__stack+0x37>
 54c:	15 b8       	out	0x05, r1	; 5
 54e:	20 e0       	ldi	r18, 0x00	; 0
 550:	35 b1       	in	r19, 0x05	; 5
 552:	c7 01       	movw	r24, r14
 554:	02 2e       	mov	r0, r18
 556:	01 c0       	rjmp	.+2      	; 0x55a <__stack+0x5b>
 558:	88 0f       	add	r24, r24
 55a:	0a 94       	dec	r0
 55c:	ea f7       	brpl	.-6      	; 0x558 <__stack+0x59>
 55e:	38 2b       	or	r19, r24
 560:	35 b9       	out	0x05, r19	; 5
 562:	2f 5f       	subi	r18, 0xFF	; 255
 564:	d2 16       	cp	r13, r18
 566:	a0 f7       	brcc	.-24     	; 0x550 <__stack+0x51>
 568:	0e 94 04 02 	call	0x408	; 0x408 <newButtonPress>
 56c:	88 23       	and	r24, r24
 56e:	99 f0       	breq	.+38     	; 0x596 <__stack+0x97>
 570:	85 ee       	ldi	r24, 0xE5	; 229
 572:	91 e0       	ldi	r25, 0x01	; 1
 574:	0e 94 7b 00 	call	0xf6	; 0xf6 <printString>
 578:	c8 01       	movw	r24, r16
 57a:	0e 94 d3 00 	call	0x1a6	; 0x1a6 <printWord>
 57e:	88 ef       	ldi	r24, 0xF8	; 248
 580:	91 e0       	ldi	r25, 0x01	; 1
 582:	0e 94 7b 00 	call	0xf6	; 0xf6 <printString>
 586:	c8 01       	movw	r24, r16
 588:	0e 94 d3 00 	call	0x1a6	; 0x1a6 <printWord>
 58c:	82 ee       	ldi	r24, 0xE2	; 226
 58e:	91 e0       	ldi	r25, 0x01	; 1
 590:	0e 94 7b 00 	call	0xf6	; 0xf6 <printString>
 594:	9d cf       	rjmp	.-198    	; 0x4d0 <main+0x96>
 596:	0e 94 72 00 	call	0xe4	; 0xe4 <getByte>
 59a:	88 37       	cpi	r24, 0x78	; 120
 59c:	09 f0       	breq	.+2      	; 0x5a0 <__stack+0xa1>
 59e:	98 cf       	rjmp	.-208    	; 0x4d0 <main+0x96>
 5a0:	e7 cf       	rjmp	.-50     	; 0x570 <__stack+0x71>

000005a2 <oldReadUltrasonic>:
 5a2:	cf 93       	push	r28
 5a4:	df 93       	push	r29
 5a6:	57 9a       	sbi	0x0a, 7	; 10
 5a8:	5f 98       	cbi	0x0b, 7	; 11
 5aa:	00 c0       	rjmp	.+0      	; 0x5ac <oldReadUltrasonic+0xa>
 5ac:	5f 9a       	sbi	0x0b, 7	; 11
 5ae:	20 98       	cbi	0x04, 0	; 4
 5b0:	87 e0       	ldi	r24, 0x07	; 7
 5b2:	92 e0       	ldi	r25, 0x02	; 2
 5b4:	0e 94 7b 00 	call	0xf6	; 0xf6 <printString>
 5b8:	18 9b       	sbis	0x03, 0	; 3
 5ba:	fe cf       	rjmp	.-4      	; 0x5b8 <oldReadUltrasonic+0x16>
 5bc:	8a e1       	ldi	r24, 0x1A	; 26
 5be:	92 e0       	ldi	r25, 0x02	; 2
 5c0:	0e 94 7b 00 	call	0xf6	; 0xf6 <printString>
 5c4:	c0 e0       	ldi	r28, 0x00	; 0
 5c6:	d0 e0       	ldi	r29, 0x00	; 0
 5c8:	18 9b       	sbis	0x03, 0	; 3
 5ca:	03 c0       	rjmp	.+6      	; 0x5d2 <oldReadUltrasonic+0x30>
 5cc:	00 00       	nop
 5ce:	21 96       	adiw	r28, 0x01	; 1
 5d0:	fb cf       	rjmp	.-10     	; 0x5c8 <oldReadUltrasonic+0x26>
 5d2:	8a e2       	ldi	r24, 0x2A	; 42
 5d4:	92 e0       	ldi	r25, 0x02	; 2
 5d6:	0e 94 7b 00 	call	0xf6	; 0xf6 <printString>
 5da:	5f 98       	cbi	0x0b, 7	; 11
 5dc:	ce 01       	movw	r24, r28
 5de:	df 91       	pop	r29
 5e0:	cf 91       	pop	r28
 5e2:	08 95       	ret

000005e4 <inputCapturePulseWidth>:
 5e4:	ef 92       	push	r14
 5e6:	ff 92       	push	r15
 5e8:	0f 93       	push	r16
 5ea:	1f 93       	push	r17
 5ec:	cf 93       	push	r28
 5ee:	df 93       	push	r29
 5f0:	20 98       	cbi	0x04, 0	; 4
 5f2:	28 9a       	sbi	0x05, 0	; 5
 5f4:	10 92 85 00 	sts	0x0085, r1
 5f8:	10 92 84 00 	sts	0x0084, r1
 5fc:	81 e0       	ldi	r24, 0x01	; 1
 5fe:	80 93 81 00 	sts	0x0081, r24
 602:	80 91 81 00 	lds	r24, 0x0081
 606:	80 64       	ori	r24, 0x40	; 64
 608:	80 93 81 00 	sts	0x0081, r24
 60c:	b5 9a       	sbi	0x16, 5	; 22
 60e:	83 b1       	in	r24, 0x03	; 3
 610:	90 e0       	ldi	r25, 0x00	; 0
 612:	0e 94 0e 01 	call	0x21c	; 0x21c <printBinaryByte>
 616:	e1 2c       	mov	r14, r1
 618:	b5 99       	sbic	0x16, 5	; 22
 61a:	07 c0       	rjmp	.+14     	; 0x62a <inputCapturePulseWidth+0x46>
 61c:	b0 9b       	sbis	0x16, 0	; 22
 61e:	02 c0       	rjmp	.+4      	; 0x624 <inputCapturePulseWidth+0x40>
 620:	e3 94       	inc	r14
 622:	b0 9a       	sbi	0x16, 0	; 22
 624:	84 e1       	ldi	r24, 0x14	; 20
 626:	8e 15       	cp	r24, r14
 628:	b8 f7       	brcc	.-18     	; 0x618 <inputCapturePulseWidth+0x34>
 62a:	88 e3       	ldi	r24, 0x38	; 56
 62c:	92 e0       	ldi	r25, 0x02	; 2
 62e:	0e 94 7b 00 	call	0xf6	; 0xf6 <printString>
 632:	80 91 86 00 	lds	r24, 0x0086
 636:	90 91 87 00 	lds	r25, 0x0087
 63a:	0e 94 d3 00 	call	0x1a6	; 0x1a6 <printWord>
 63e:	85 e4       	ldi	r24, 0x45	; 69
 640:	92 e0       	ldi	r25, 0x02	; 2
 642:	0e 94 7b 00 	call	0xf6	; 0xf6 <printString>
 646:	83 b1       	in	r24, 0x03	; 3
 648:	90 e0       	ldi	r25, 0x00	; 0
 64a:	0e 94 0e 01 	call	0x21c	; 0x21c <printBinaryByte>
 64e:	8a e3       	ldi	r24, 0x3A	; 58
 650:	92 e0       	ldi	r25, 0x02	; 2
 652:	0e 94 7b 00 	call	0xf6	; 0xf6 <printString>
 656:	b5 9b       	sbis	0x16, 5	; 22
 658:	3c c0       	rjmp	.+120    	; 0x6d2 <inputCapturePulseWidth+0xee>
 65a:	00 91 86 00 	lds	r16, 0x0086
 65e:	10 91 87 00 	lds	r17, 0x0087
 662:	b5 9a       	sbi	0x16, 5	; 22
 664:	80 91 81 00 	lds	r24, 0x0081
 668:	8f 7b       	andi	r24, 0xBF	; 191
 66a:	80 93 81 00 	sts	0x0081, r24
 66e:	f1 2c       	mov	r15, r1
 670:	b5 99       	sbic	0x16, 5	; 22
 672:	07 c0       	rjmp	.+14     	; 0x682 <inputCapturePulseWidth+0x9e>
 674:	b0 9b       	sbis	0x16, 0	; 22
 676:	02 c0       	rjmp	.+4      	; 0x67c <inputCapturePulseWidth+0x98>
 678:	f3 94       	inc	r15
 67a:	b0 9a       	sbi	0x16, 0	; 22
 67c:	86 e0       	ldi	r24, 0x06	; 6
 67e:	8f 15       	cp	r24, r15
 680:	b8 f7       	brcc	.-18     	; 0x670 <inputCapturePulseWidth+0x8c>
 682:	b5 9b       	sbis	0x16, 5	; 22
 684:	0f c0       	rjmp	.+30     	; 0x6a4 <inputCapturePulseWidth+0xc0>
 686:	c0 91 86 00 	lds	r28, 0x0086
 68a:	d0 91 87 00 	lds	r29, 0x0087
 68e:	c8 01       	movw	r24, r16
 690:	0e 94 d3 00 	call	0x1a6	; 0x1a6 <printWord>
 694:	8c e3       	ldi	r24, 0x3C	; 60
 696:	92 e0       	ldi	r25, 0x02	; 2
 698:	0e 94 7b 00 	call	0xf6	; 0xf6 <printString>
 69c:	ce 01       	movw	r24, r28
 69e:	0e 94 d3 00 	call	0x1a6	; 0x1a6 <printWord>
 6a2:	02 c0       	rjmp	.+4      	; 0x6a8 <inputCapturePulseWidth+0xc4>
 6a4:	c0 e0       	ldi	r28, 0x00	; 0
 6a6:	d0 e0       	ldi	r29, 0x00	; 0
 6a8:	8f e3       	ldi	r24, 0x3F	; 63
 6aa:	92 e0       	ldi	r25, 0x02	; 2
 6ac:	0e 94 7b 00 	call	0xf6	; 0xf6 <printString>
 6b0:	8e 2d       	mov	r24, r14
 6b2:	90 e0       	ldi	r25, 0x00	; 0
 6b4:	0e 94 ba 00 	call	0x174	; 0x174 <printByte>
 6b8:	8c e3       	ldi	r24, 0x3C	; 60
 6ba:	92 e0       	ldi	r25, 0x02	; 2
 6bc:	0e 94 7b 00 	call	0xf6	; 0xf6 <printString>
 6c0:	8f 2d       	mov	r24, r15
 6c2:	90 e0       	ldi	r25, 0x00	; 0
 6c4:	0e 94 ba 00 	call	0x174	; 0x174 <printByte>
 6c8:	81 e4       	ldi	r24, 0x41	; 65
 6ca:	92 e0       	ldi	r25, 0x02	; 2
 6cc:	0e 94 7b 00 	call	0xf6	; 0xf6 <printString>
 6d0:	05 c0       	rjmp	.+10     	; 0x6dc <inputCapturePulseWidth+0xf8>
 6d2:	f1 2c       	mov	r15, r1
 6d4:	c0 e0       	ldi	r28, 0x00	; 0
 6d6:	d0 e0       	ldi	r29, 0x00	; 0
 6d8:	00 e0       	ldi	r16, 0x00	; 0
 6da:	10 e0       	ldi	r17, 0x00	; 0
 6dc:	be 01       	movw	r22, r28
 6de:	6f 19       	sub	r22, r15
 6e0:	71 09       	sbc	r23, r1
 6e2:	60 1b       	sub	r22, r16
 6e4:	71 0b       	sbc	r23, r17
 6e6:	80 e0       	ldi	r24, 0x00	; 0
 6e8:	90 e0       	ldi	r25, 0x00	; 0
 6ea:	df 91       	pop	r29
 6ec:	cf 91       	pop	r28
 6ee:	1f 91       	pop	r17
 6f0:	0f 91       	pop	r16
 6f2:	ff 90       	pop	r15
 6f4:	ef 90       	pop	r14
 6f6:	08 95       	ret

000006f8 <readUltrasonic>:
 6f8:	10 92 6f 00 	sts	0x006F, r1
 6fc:	10 92 80 00 	sts	0x0080, r1
 700:	10 92 82 00 	sts	0x0082, r1
 704:	57 9a       	sbi	0x0a, 7	; 10
 706:	5f 98       	cbi	0x0b, 7	; 11
 708:	00 c0       	rjmp	.+0      	; 0x70a <readUltrasonic+0x12>
 70a:	00 c0       	rjmp	.+0      	; 0x70c <readUltrasonic+0x14>
 70c:	00 00       	nop
 70e:	5f 9a       	sbi	0x0b, 7	; 11
 710:	00 00       	nop
 712:	20 98       	cbi	0x04, 0	; 4
 714:	28 98       	cbi	0x05, 0	; 5
 716:	03 b1       	in	r16, 0x03	; 3
 718:	80 2f       	mov	r24, r16
 71a:	90 e0       	ldi	r25, 0x00	; 0
 71c:	0e 94 0e 01 	call	0x21c	; 0x21c <printBinaryByte>
 720:	c0 e0       	ldi	r28, 0x00	; 0
 722:	d0 e0       	ldi	r29, 0x00	; 0
 724:	21 96       	adiw	r28, 0x01	; 1
 726:	c8 32       	cpi	r28, 0x28	; 40
 728:	d1 05       	cpc	r29, r1
 72a:	e0 f0       	brcs	.+56     	; 0x764 <readUltrasonic+0x6c>
 72c:	13 b1       	in	r17, 0x03	; 3
 72e:	01 17       	cp	r16, r17
 730:	b9 f0       	breq	.+46     	; 0x760 <readUltrasonic+0x68>
 732:	81 2f       	mov	r24, r17
 734:	90 e0       	ldi	r25, 0x00	; 0
 736:	0e 94 0e 01 	call	0x21c	; 0x21c <printBinaryByte>
 73a:	84 e4       	ldi	r24, 0x44	; 68
 73c:	92 e0       	ldi	r25, 0x02	; 2
 73e:	0e 94 7b 00 	call	0xf6	; 0xf6 <printString>
 742:	ce 01       	movw	r24, r28
 744:	0e 94 d3 00 	call	0x1a6	; 0x1a6 <printWord>
 748:	84 e4       	ldi	r24, 0x44	; 68
 74a:	92 e0       	ldi	r25, 0x02	; 2
 74c:	0e 94 7b 00 	call	0xf6	; 0xf6 <printString>
 750:	10 ff       	sbrs	r17, 0
 752:	04 c0       	rjmp	.+8      	; 0x75c <readUltrasonic+0x64>
 754:	82 ee       	ldi	r24, 0xE2	; 226
 756:	91 e0       	ldi	r25, 0x01	; 1
 758:	0e 94 7b 00 	call	0xf6	; 0xf6 <printString>
 75c:	c0 e0       	ldi	r28, 0x00	; 0
 75e:	d0 e0       	ldi	r29, 0x00	; 0
 760:	01 2f       	mov	r16, r17
 762:	e0 cf       	rjmp	.-64     	; 0x724 <readUltrasonic+0x2c>
 764:	10 2f       	mov	r17, r16
 766:	fc cf       	rjmp	.-8      	; 0x760 <readUltrasonic+0x68>

00000768 <ultrasonicCentimeters>:
 768:	0e 94 7c 03 	call	0x6f8	; 0x6f8 <readUltrasonic>

0000076c <ultrasonicInches>:
 76c:	0e 94 7c 03 	call	0x6f8	; 0x6f8 <readUltrasonic>

00000770 <ultrasonicRangeToInches>:
 770:	63 e9       	ldi	r22, 0x93	; 147
 772:	70 e0       	ldi	r23, 0x00	; 0
 774:	0e 94 ca 03 	call	0x794	; 0x794 <__udivmodhi4>
 778:	86 2f       	mov	r24, r22
 77a:	08 95       	ret

0000077c <__udivmodqi4>:
 77c:	99 1b       	sub	r25, r25
 77e:	79 e0       	ldi	r23, 0x09	; 9
 780:	04 c0       	rjmp	.+8      	; 0x78a <__udivmodqi4_ep>

00000782 <__udivmodqi4_loop>:
 782:	99 1f       	adc	r25, r25
 784:	96 17       	cp	r25, r22
 786:	08 f0       	brcs	.+2      	; 0x78a <__udivmodqi4_ep>
 788:	96 1b       	sub	r25, r22

0000078a <__udivmodqi4_ep>:
 78a:	88 1f       	adc	r24, r24
 78c:	7a 95       	dec	r23
 78e:	c9 f7       	brne	.-14     	; 0x782 <__udivmodqi4_loop>
 790:	80 95       	com	r24
 792:	08 95       	ret

00000794 <__udivmodhi4>:
 794:	aa 1b       	sub	r26, r26
 796:	bb 1b       	sub	r27, r27
 798:	51 e1       	ldi	r21, 0x11	; 17
 79a:	07 c0       	rjmp	.+14     	; 0x7aa <__udivmodhi4_ep>

0000079c <__udivmodhi4_loop>:
 79c:	aa 1f       	adc	r26, r26
 79e:	bb 1f       	adc	r27, r27
 7a0:	a6 17       	cp	r26, r22
 7a2:	b7 07       	cpc	r27, r23
 7a4:	10 f0       	brcs	.+4      	; 0x7aa <__udivmodhi4_ep>
 7a6:	a6 1b       	sub	r26, r22
 7a8:	b7 0b       	sbc	r27, r23

000007aa <__udivmodhi4_ep>:
 7aa:	88 1f       	adc	r24, r24
 7ac:	99 1f       	adc	r25, r25
 7ae:	5a 95       	dec	r21
 7b0:	a9 f7       	brne	.-22     	; 0x79c <__udivmodhi4_loop>
 7b2:	80 95       	com	r24
 7b4:	90 95       	com	r25
 7b6:	bc 01       	movw	r22, r24
 7b8:	cd 01       	movw	r24, r26
 7ba:	08 95       	ret

000007bc <_exit>:
 7bc:	f8 94       	cli

000007be <__stop_program>:
 7be:	ff cf       	rjmp	.-2      	; 0x7be <__stop_program>
